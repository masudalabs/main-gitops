projects:
  bootstrap:
    namespace: argocd
    description: 'Project for initial bootstrap'
    sourceRepos:
      - 'https://github.com/masudalabs/*'
      - 'https://argoproj.github.io/*'
      - 'https://charts.external-secrets.io'
      - 'https://prometheus-community.github.io/*'
    sourceNamespaces:
      - '*'
    destinations:
      - namespace: 'kube-system'
        server: '*'
      - namespace: '!default'
        server: '*'
      - namespace: 'argocd'
        server: '*'
      - namespace: 'external-secrets'
        server: '*'
      - namespace: 'prometheus'
        server: '*'
    clusterResourceWhitelist:
      - group: '*'
        kind: '*'


  manager-bootstrap:
    namespace: argocd
    additionalLabels:
      type: 'bootstrap'
    syncPolicy:
      preserveResourcesOnDeletion: true
    generators:
      - clusters:
          selector:
            matchLabels:
              environment: ops
    template:
      metadata:
        name: manager-argocd-bootstrap
        labels:
          type: 'bootstrap'
      spec:
        project: bootstrap
        sources:
          - repoURL: '{{metadata.annotations.repo-url}}'
            path: clusters/
            targetRevision: '{{metadata.annotations.repo-revision}}'
            directory:
              exclude: exclude/*
          - repoURL: '{{metadata.annotations.repo-url}}'
            path: blue-prints/addons
            targetRevision: '{{metadata.annotations.repo-revision}}'
            directory:
              exclude: exclude/*
              recurse: true
          - repoURL: '{{metadata.annotations.repo-url}}'
            path: blue-prints/workloads
            targetRevision: '{{metadata.annotations.repo-revision}}'
            directory:
              exclude: exclude/*
        destination:
          namespace: argocd
          name: '{{name}}'
        syncPolicy:
          automated:
            allowEmpty: true
            prune: false

applications:
  appset-bootstrap:
    namespace: argocd
    additionalLabels:
      type: "bootstrap"
    project: bootstrap
    sources:
    - repoURL: https://github.com/masudalabs/main-gitops.git
      targetRevision: "main"
      path: gitops/bootstrap/addons
      directory:
        exclude: exclude/*
        recurse: true
    - repoURL: https://github.com/masudalabs/main-gitops.git
      targetRevision: "main"
      path: gitops/bootstrap/workloads
      directory:
        exclude: exclude/*
        recurse: true
    destination:
      server: https://kubernetes.default.svc
      namespace: argocd
    syncPolicy:
      automated:
        prune: false
        selfHeal: false
        allowEmpty: true
    
  self-argocd:
    namespace: argocd
    additionalLabels:
      type: "bootstrap"
    project: bootstrap
    sources:
    - repoURL: https://github.com/masudalabs/main-gitops.git
      targetRevision: "main"
      ref: values
    - repoURL: https://argoproj.github.io/argo-helm
      targetRevision: 7.7.3
      chart: 'argo-cd'
      helm:
        releaseName: 'argocd'
        valueFiles:
          - $values/gitops/clusters/in-cluster/argocd/values.yaml
    destination:
      server: https://kubernetes.default.svc
      namespace: argocd
    syncPolicy:
      automated:
        prune: false
        selfHeal: false
        allowEmpty: true
      syncOptions:
      - CreateNamespace=true

  self-argocd-apps:
    namespace: argocd
    additionalLabels:
      type: "bootstrap"
    project: bootstrap
    sources:
    - repoURL: https://github.com/masudalabs/main-gitops.git
      targetRevision: "main"
      ref: values
    - repoURL: https://argoproj.github.io/argo-helm
      targetRevision: 2.0.2
      chart: 'argocd-apps'
      helm:
        releaseName: 'argocd-apps'
        valueFiles:
          - $values/gitops/clusters/in-cluster/argocd-apps/values.yaml
    destination:
      server: https://kubernetes.default.svc
      namespace: argocd
    syncPolicy:
      automated:
        prune: false
        selfHeal: false
        allowEmpty: true